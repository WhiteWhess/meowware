package wtf.whess.meowware.client.main.functions.impl.exploit;

import joptsimple.internal.Strings;
import net.minecraft.network.play.client.CPacketTabComplete;
import net.minecraft.network.play.server.SPacketTabComplete;
import wtf.whess.meowware.client.api.eventsystem.EventTarget;
import wtf.whess.meowware.client.api.eventsystem.impl.PacketSendEvent;
import wtf.whess.meowware.client.api.utilities.client.ChatUtil;
import wtf.whess.meowware.client.main.functions.Category;
import wtf.whess.meowware.client.main.functions.Function;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public final class Plugins extends Function {
    public Plugins() {
        super("Plugins", Category.exploit);
    }

    @Override
    public void onEnable() {
        if(mc.player == null)
            return;
        mc.player.connection.sendPacket(new CPacketTabComplete("/", null, false));
        super.onEnable();
    }

    @EventTarget
    public boolean onPacket(PacketSendEvent event) {
        if(event.getPacket() instanceof SPacketTabComplete) {
            SPacketTabComplete s3APacketTabComplete = (SPacketTabComplete) event.getPacket();

            List<String> plugins = new ArrayList<>();
            String[] commands = s3APacketTabComplete.getMatches();

            for(int i = 0; i < commands.length; i++) {
                String[] command = commands[i].split(":");

                if(command.length > 1) {
                    String pluginName = command[0].replace("/", "");

                    if(!plugins.contains(pluginName)) {
                        plugins.add(pluginName);
                    }
                }
            }

            Collections.sort(plugins);

            if(!plugins.isEmpty()) {
                ChatUtil.printChat("Plugins \u00a77(\u00a78" + plugins.size() + "\u00a77): \u00a79" + Strings.join(plugins.toArray(new String[0]), "\u00a77, \u00a79"));
            }
            else
            {
                ChatUtil.printChat("No plugins found.");
            }
            this.setToggled(false);
        }
        return true;
    }

}
